name: Create Branch Image

on:
  repository_dispatch:
    types: [trigger-care-medic-portal]
  workflow_dispatch:
    inputs:
      target-branch:
        description: 'Target Branch'
        required: true
        default: 'develop'
      NEXT_PUBLIC_DOMAIN_VAR:
        description: 'Value for NEXT_PUBLIC_DOMAIN'
        required: true
      NEXT_PUBLIC_API_URL_VAR:
        description: 'value for NEXT_PUBLIC_API_URL'
        required: true 
      NEXT_PUBLIC_LOGIN_URL_VAR:
        description: 'value for NEXT_PUBLIC_LOGIN_URL'
        required: true
      NEXT_ICD_URL_URL_VAR:
        description: 'value for NEXT_ICD_URL'
        required: true
      NEXT_PUBLIC_CURRENCY_VAR:
        description: 'value for NEXT_PUBLIC_CURRENCY'
        required: true
      NEXT_PUBLIC_LOCALE_VAR:
        description: 'value for NEXT_PUBLIC_LOCALE'
        required: true
      NEXT_PUBLIC_PROVIDER_EMAIL_VAR:
        description: 'value for NEXT_PUBLIC_PROVIDER_EMAIL'
        required: true
      NEXT_PUBLIC_PROVIDER_NAME_VAR:
        description: 'value for NEXT_PUBLIC_PROVIDER_EMAIL'
        required: true
      NEXT_PUBLIC_PROVIDER_PAYSTACK_VAR:
        description: 'value for NEXT_PUBLIC_PROVIDER_PAYSTACK'
        required: true
      
env:
  REGISTRY: https://registry.hub.docker.com/v2/
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-and-push:
    runs-on: self-hosted
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      #- name: Log in to the Container registry
      #  run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #  with:
      #    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
     
      #- name: Create env variables
      #  run: |
      #    chmod +x ./env.example.sh
      #    ./env.example.sh
      #    cat .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check if Docker Buildx builder exists
        run: |
          if docker buildx inspect mybuilder &> /dev/null; then
            echo "Docker Buildx builder 'mybuilder' already exists."
            exit 0
          else
            echo "Docker Buildx builder 'mybuilder' does not exist."
            exit 1
          fi
      
      - name: Create a Docker Buildx builder if it doesn't exist
        if: ${{ failure() }}
        run: |
          docker buildx create --use --name mybuilder

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: swedcon18com/carelyo:medic-portal-test-latest
          file: Dockerfile.prod
          builder: mybuilder
          build-args: |
              NEXT_PUBLIC_DOMAIN_VAR=${{ inputs.NEXT_PUBLIC_DOMAIN_VAR }}
              NEXT_PUBLIC_API_URL_VAR": "${{ inputs.NEXT_PUBLIC_API_URL_VAR }}
              NEXT_PUBLIC_LOGIN_URL_VAR": "${{ inputs.NEXT_PUBLIC_LOGIN_URL_VAR }}
              NEXT_ICD_URL_VAR": "${{ inputs.NEXT_ICD_URL_VAR }}
              NEXT_PUBLIC_CURRENCY_VAR": "${{ inputs.NEXT_PUBLIC_CURRENCY_VAR }}
              NEXT_PUBLIC_LOCALE_VAR": "${{ inputs.NEXT_PUBLIC_LOCALE_VAR }}
              NEXT_PUBLIC_PROVIDER_EMAIL_VAR": "${{ inputs.NEXT_PUBLIC_PROVIDER_EMAIL_VAR }}
              NEXT_PUBLIC_PROVIDER_NAME_VAR": "${{ inputs.NEXT_PUBLIC_PROVIDER_NAME_VAR }}
              NEXT_PUBLIC_PROVIDER_PAYSTACK_VAR": "${{ inputs.NEXT_PUBLIC_PROVIDER_PAYSTACK_VAR }}
              DATABASE_URL_VAR": "${{ inputs.DATABASE_URL_VAR }}
