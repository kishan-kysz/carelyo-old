name: Docker Image CI

on:
  repository_dispatch:
    types: [deploy]
    
env:
  APP_NAME: api
  APP_VERSION: api-latest
  DOMAIN: carelyo.top

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      issue_number: ${{ github.event.client_payload.number }}
      issue_body: ${{ github.event.client_payload.body }}
      issue_label: ${{ github.event.client_payload.label }}
      
    steps:
      - name: Check issue number, body, and label
        run: |
          issue_number=${{ github.event.client_payload.number }}
          issue_body=${{ github.event.client_payload.body }}
          issue_label=${{ github.event.client_payload.label }}
          export issue_number=${{ github.event.client_payload.number }}
          export issue_body=${{ github.event.client_payload.body }}
          export issue_label=${{ github.event.client_payload.label }}
          
          if [ -z "$issue_number" ]; then
            echo "Missing issue number"
            exit 1
          fi
          if [ -z "$issue_body" ]; then
            echo "Missing issue body"
            exit 1
          fi
          if [ -z "$issue_label" ]; then
            echo "Missing issue label"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: create an issue
        id: new-issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: New Customer Auto Deployment
          body: |
            DEPLOYING ${{ env.APP_NAME }} FOR THE NEW CUSTOMER ${{ env.issue_body }}
          labels: ${{ env.issue_label }}
          
      - name: Set Issue Number
        run: |
          echo "NUMBER=${{ steps.new-issue.outputs.number }}" >> $GITHUB_ENV

      - name: Print Issue Number
        run: |
          echo "Issue number is $NUMBER"
      - 
        uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}  
          
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - 
        name: Set up Docker Buildx 
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Set issue body as environment variable
        id: issuevalues
        run: |
          issue_body=$(echo "${{ github.event.client_payload.body }}" | tr -d '\r')
          echo "ISSUE_BODY=${issue_body}" >> $GITHUB_ENV
        shell: bash
        env:
          ISSUE_BODY: ${{ github.event.client_payload.body }}
          ISSUE_LABEL: ${{ github.event.client_payload.label }}
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: swedcon18com/carelyo:${{ env.ISSUE_BODY }}-${{ env.APP_VERSION }}
          
      - name: Check image
        id: image_exists
        uses: cloudposse/github-action-docker-image-exists@main
        with:
          registry: registry.hub.docker.com
          organization: swedcon18com
          repository: carelyo
          login: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
          tag: ${{ env.ISSUE_BODY }}-${{ env.APP_VERSION }}
          
      - name: Close issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${{ env.NUMBER }}
          gh issue close "${{ env.NUMBER }}" --comment "${{ env.ISSUE_BODY }}${{ env.APP_VERSION }} WAS DEPLOY SUCCESSFUL"
          
      - name: Trigger Repository Dispatch
        env:
          ISSUE_NUMBER: ${{ github.event.client_payload.number }}
          ISSUE_BODY: ${{ github.event.client_payload.body }}
          ISSUE_LABEL: ${{ github.event.client_payload.label }}
          GH_TOKEN: ${{ secrets.REPO_PAT }}
        run: |     
          gh api repos/Carelyo/adminpanel/dispatches \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Content-Type: application/json" \
            -f event_type=deploy \
            -f client_payload[number]=$ISSUE_NUMBER \
            -f client_payload[body]="$ISSUE_BODY"\
            -f client_payload[label]="$ISSUE_LABEL"
